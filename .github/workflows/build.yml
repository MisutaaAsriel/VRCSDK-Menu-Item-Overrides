# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build Package

on:
  workflow_dispatch:
    inputs:
      release:
        required: true
        type: boolean
        default: false
      reason:
        required: true
        type: string
        default: "Manual Build"

run-name: ${{ inputs.reason }}

jobs:
  build:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: true
    
    outputs:
      commitHash: ${{ steps.hash.outputs.commitHash }}
      version: ${{ steps.variables.outputs.version }}
    
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, '[publish-gh]') || contains(github.event.head_commit.message, '[build-gh]')
    
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'
        fetch-depth: 0

    - name: Identify Build
      id: hash
      run: echo "commitHash=$(git rev-parse HEAD | cut -c1-9)" >> $GITHUB_OUTPUT

    - name: Get Package Details
      working-directory: ${{ github.workspace }}
      run: |
        version_fix=$(($(git log --oneline | awk 'END {print NR}') + 24))
        
        source_path=${{ github.workspace }}/Sources/Menu-Item-Overrides
        echo "source_path=$source_path" >> $GITHUB_ENV

        package_path=$source_path/Assets/MenuItemOverrides
        echo "package_path=$package_path" >> $GITHUB_ENV
        
        source_version=$(awk -F': ' '/"version"/ {gsub(/[",]/, "", $2); print $2}' $package_path/package.json)
        echo "short_version=$source_version" >> $GITHUB_ENV

        echo "version=$source_version+$version_fix.${{ github.run_number }}" >> $GITHUB_ENV
    
    - name: Configure Output Variables
      id: variables
      run: |
        echo "package_path=${{ env.package_path }}" >> $GITHUB_OUTPUT
        echo "version=${{ env.version }}" >> $GITHUB_OUTPUT

    - name: Set Package Version
      uses: restackio/update-json-file-action@2.1
      with:
        file: ${{ github.workspace }}/Assets/package.json
        fields: "{\"version\": \"${{ env.version }}\"}"

    - name: Package Package
      working-directory: ${{ steps.variables.outputs.package_path }}
      run: |
        mkdir ${{ github.workspace }}/Artifacts
        mv -f ${{ github.workspace }}/Assets/package.json ./package.json
        mv ${{ github.workspace }}/Assets/LICENSE.txt.meta ./LICENSE.txt.meta
        mv ${{ env.source_path }}/LICENSE.txt ./LICENSE.txt
        rm -rf ./Editor/Dependencie*
        zip -r "${{ github.workspace }}/Artifacts/com.5pdev.menu-item-overrides-${{ env.short_version }}.zip" .

    - name: Upload Community Package
      uses: actions/upload-artifact@v4.6.2
      with:
        name: Menu-Item-Overrides-VCC-Release-${{ env.version }}-${{ steps.hash.outputs.commitHash }}
        path: ${{ github.workspace }}/Artifacts/com.5pdev.menu-item-overrides-${{ env.short_version }}.zip
        if-no-files-found: error
        retention-days: 60

  Release:
    runs-on: ubuntu-latest
    needs: [build]
    if: (github.event_name == 'workflow_dispatch' && inputs.release) || (github.event_name == 'push' && contains(github.ref, 'refs/tags/') && !contains(github.event.head_commit.message, '[skip-gh]')) || contains(github.event.head_commit.message, '[publish-gh]')
    permissions:
      contents: write

    steps:
      - uses: actions/download-artifact@v5

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: false
          tag_name: ${{ needs.build.outputs.version }}
          name: "Editor Menu Overrides ${{ needs.build.outputs.version }} (${{ needs.build.outputs.commitHash }})"
          files: |
            ${{ github.workspace }}/**/*.zip